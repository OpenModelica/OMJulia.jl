var documenterSearchIndex = {"docs":
[{"location":"sendExpression/#sendExpression","page":"sendExpression","title":"sendExpression","text":"","category":"section"},{"location":"sendExpression/","page":"sendExpression","title":"sendExpression","text":"Start a new OMCSession and send scripting API expressions to the omc session with sendExpression().","category":"page"},{"location":"sendExpression/","page":"sendExpression","title":"sendExpression","text":"sendExpression","category":"page"},{"location":"sendExpression/#OMJulia.sendExpression","page":"sendExpression","title":"OMJulia.sendExpression","text":"sendExpression(omc, expr; parsed=true)\n\nSend API call to OpenModelica ZMQ server. See OpenModelica User's Guide Scripting API for a complete list of all functions.\n\nnote: Note\nSpecial characters in argument expr need to be escaped. E.g. \" becomes \". For example scripting API callloadFile(\"/path/to/M.mo\")will translate tosendExpression(omc, \"loadFile(\"/path/to/M.mo\")\")\n\n\n\n\n\n","category":"function"},{"location":"quickstart/#Quickstart","page":"Quickstart","title":"Quickstart","text":"","category":"section"},{"location":"quickstart/#ModelicaSystem","page":"Quickstart","title":"ModelicaSystem","text":"","category":"section"},{"location":"quickstart/","page":"Quickstart","title":"Quickstart","text":"To simulate Modelica model BouncingBall","category":"page"},{"location":"quickstart/","page":"Quickstart","title":"Quickstart","text":"model BouncingBall\n  parameter Real e=0.7 \"coefficient of restitution\";\n  parameter Real g=9.81 \"gravity acceleration\";\n  Real h(fixed=true, start=1) \"height of ball\";\n  Real v(fixed=true) \"velocity of ball\";\n  Boolean flying(fixed=true, start=true) \"true, if ball is flying\";\n  Boolean impact;\n  Real v_new(fixed=true);\n  Integer foo;\n\nequation\n  impact = h <= 0.0;\n  foo = if impact then 1 else 2;\n  der(v) = if flying then -g else 0;\n  der(h) = v;\n\n  when {h <= 0.0 and v <= 0.0,impact} then\n    v_new = if edge(impact) then -e*pre(v) else 0;\n    flying = v_new > 0;\n    reinit(v, v_new);\n  end when;\n\nend BouncingBall;","category":"page"},{"location":"quickstart/","page":"Quickstart","title":"Quickstart","text":"info: Info\nThe BouncingBall.mo file can be found in your OpenModelica installation directory in <OpenModelcia>/share/doc/omc/testmodels/BouncingBall.mo","category":"page"},{"location":"quickstart/","page":"Quickstart","title":"Quickstart","text":"start a new OMCSession and create a new ModelicaSystem to build the BouncingBall model.","category":"page"},{"location":"quickstart/","page":"Quickstart","title":"Quickstart","text":"using OMJulia\n\nmod = OMJulia.OMCSession()\nomcWorkDoir = mkpath(joinpath(\"docs\", \"omc-temp\"))  # hide\nmkpath(omcWorkDoir)                                 # hide\nsendExpression(mod, \"cd(\\\"$(omcWorkDoir)\\\")\")       # hide\nModelicaSystem(mod,\n               joinpath(\"docs\", \"testmodels\", \"BouncingBall.mo\"),\n               \"BouncingBall\")","category":"page"},{"location":"quickstart/#Scripting-API-with-sendExpression","page":"Quickstart","title":"Scripting API with sendExpression","text":"","category":"section"},{"location":"quickstart/","page":"Quickstart","title":"Quickstart","text":"Start a new OMCSession and send scripting API expressions to the omc session with sendExpression().","category":"page"},{"location":"quickstart/","page":"Quickstart","title":"Quickstart","text":"using OMJulia\n\nomc = OMJulia.OMCSession()\nsendExpression(omc, \"loadModel(Modelica)\")\nomcWorkDoir = mkpath(joinpath(\"docs\", \"omc-temp\"))  # hide\nmkpath(omcWorkDoir)                                 # hide\nsendExpression(omc, \"cd(\\\"$(omcWorkDoir)\\\")\")       # hide\nsendExpression(omc, \"model a Real s; equation s=sin(10*time); end a;\")\nsendExpression(omc, \"simulate(a)\")\nOMJulia.sendExpression(omc, \"quit()\", parsed=false)","category":"page"},{"location":"quickstart/","page":"Quickstart","title":"Quickstart","text":"info: Info\nSpecial characters in string arguments need to be escaped. E.g. \" becomes \\\". For example scripting API callloadFile(\"/path/to/M.mo\")will translate tosendExpression(omc, \"loadFile(\\\"/path/to/M.mo\\\")\")","category":"page"},{"location":"#OMJulia.jl","page":"Home","title":"OMJulia.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Julia scripting OpenModelica interface.","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"OMJulia - the OpenModelica Julia API is a free, open source, highly portable Julia based interactive session handler for Julia scripting of OpenModelica API functionality. It provides the modeler with components for creating a complete Julia-Modelica modeling, compilation and simulation environment based on the latest OpenModelica implementation and Modelica library standard available.","category":"page"},{"location":"","page":"Home","title":"Home","text":"OMJulia is structured to combine both the solving strategy and model building. Thus, domain experts (people writing the models) and computational engineers (people writing the solver code) can work on one unified tool that is industrially viable for optimization of Modelica models, while offering a flexible platform for algorithm development and research. OMJulia is not a standalone package, it depends upon the OpenModelica installation.","category":"page"},{"location":"","page":"Home","title":"Home","text":"OMJulia is implemented in Julia and depends on ZeroMQ - high performance asynchronous messaging library and it supports the Modelica Standard Library version 4.0 that is included with OpenModelica.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Make sure OpenModelica is installed.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Install OMJulia.jl with:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> import Pkg; Pkg.add(\"OMJulia\")","category":"page"},{"location":"#Features-of-OMJulia","page":"Home","title":"Features of OMJulia","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The OMJulia package contains the following features:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Interactive session handling, parsing, interpretation of commands and Modelica expressions for evaluation, simulation, plotting, etc.\nConnect with the OpenModelica compiler through zmq sockets\nAble to interact with the OpenModelica compiler through the available API\nEasy access to the Modelica Standard library.\nAll the API calls are communicated with the help of the sendExpression method implemented in a Julia module\nThe results are returned as strings","category":"page"},{"location":"modelicaSystem/#Advanced-API","page":"ModelicaSystem","title":"Advanced API","text":"","category":"section"},{"location":"modelicaSystem/#ModelicaSystem","page":"ModelicaSystem","title":"ModelicaSystem","text":"","category":"section"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"ModelicaSystem","category":"page"},{"location":"modelicaSystem/#OMJulia.ModelicaSystem","page":"ModelicaSystem","title":"OMJulia.ModelicaSystem","text":"ModelicaSystem(omc, filename, modelname, library=nothing;\n               actcommandLineOptions=nothing, variableFilter=nothing)\n\nSet command line options for OMCSession and build model modelname to prepare for a simulation.\n\nArguments\n\nomc:       OpenModelica compiler session, see OMCSession().\nfilename:  Path to Modelica file.\nmodelname: Name of Modelica model to build, including namespace if the              model is wrappen within a Modelica package.\nlibrary:   List of dependent libraries or Modelica files.              This argument can be passed as string (e.g. \"Modelica\")              or tuple (e.g. (\"Modelica\", \"4.0\")              or array (e.g. [\"Modelica\", \"SystemDynamics\"]              or [(\"Modelica\", \"4.0\"), \"SystemDynamics\"]).\n\nKeyword Arguments\n\ncommandLineOptions: OpenModelica command line options, see                       OpenModelica Compiler Flags.\nvariableFilter:     Regex to filter variables in result file.\n\nUsage\n\nusing OMJulia\nmod = OMJulia.OMCSession()\nModelicaSystem(mod, \"BouncingBall.mo\", \"BouncingBall\", [\"Modelica\", \"SystemDynamics\"], commandLineOptions=\"-d=newInst\")\n\nProviding dependent libaries:\n\nusing OMJulia\nmod = OMJulia.OMCSession()\nModelicaSystem(mod, \"BouncingBall.mo\", \"BouncingBall\", [\"Modelica\", \"SystemDynamics\", \"dcmotor.mo\"])\n\nSee also OMCSession().\n\n\n\n\n\n","category":"function"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"OMJulia.OMCSession","category":"page"},{"location":"modelicaSystem/#OMJulia.OMCSession","page":"ModelicaSystem","title":"OMJulia.OMCSession","text":"OMCSession(omc=nothing)\n\nCreate new OpenModelica session.\n\nArguments\n\nomc: \"Path to OpenModelica compiler\"\n\nSee also ModelicaSystem.\n\n\n\n\n\n","category":"type"},{"location":"modelicaSystem/#Example","page":"ModelicaSystem","title":"Example","text":"","category":"section"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"using OMJulia\n\nmod = OMJulia.OMCSession()\nomcWorkDoir = mkpath(joinpath(\"docs\", \"omc-temp\"))  # hide\nmkpath(omcWorkDoir)                                 # hide\nsendExpression(mod, \"cd(\\\"$(omcWorkDoir)\\\")\")       # hide\nModelicaSystem(mod,\n               joinpath(\"docs\", \"testmodels\", \"BouncingBall.mo\"),\n               \"BouncingBall\")","category":"page"},{"location":"modelicaSystem/#WorkDirectory","page":"ModelicaSystem","title":"WorkDirectory","text":"","category":"section"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"For each OMJulia session a temporary work directory is created and the results are published in that working directory. In order to get the work directory use getWorkDirectory.","category":"page"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"getWorkDirectory","category":"page"},{"location":"modelicaSystem/#OMJulia.getWorkDirectory","page":"ModelicaSystem","title":"OMJulia.getWorkDirectory","text":"Function which returns the working directory of current OMJulia Session for each session a temporary directory is created and the simulation results are generated\n\n\n\n\n\n","category":"function"},{"location":"modelicaSystem/#Build-Model","page":"ModelicaSystem","title":"Build Model","text":"","category":"section"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"In case the Modelica model needs to be updated or additional simulation flags needs to be set using sendExpression The buildModel API can be used after ModelicaSystem.","category":"page"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"buildModel","category":"page"},{"location":"modelicaSystem/#OMJulia.buildModel","page":"ModelicaSystem","title":"OMJulia.buildModel","text":"Standard buildModel API which builds the modelica model\n\n\n\n\n\n","category":"function"},{"location":"modelicaSystem/#Get-Methods","page":"ModelicaSystem","title":"Get Methods","text":"","category":"section"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"getQuantities\nshowQuantities\ngetContinuous\ngetInputs\ngetOutputs\ngetParameters\ngetSimulationOptions\ngetSolutions","category":"page"},{"location":"modelicaSystem/#OMJulia.getQuantities","page":"ModelicaSystem","title":"OMJulia.getQuantities","text":"standard getXXX() API function which return list of all variables parsed from xml file\n\n\n\n\n\n","category":"function"},{"location":"modelicaSystem/#OMJulia.showQuantities","page":"ModelicaSystem","title":"OMJulia.showQuantities","text":"standard getXXX() API function same as getQuantities(), but returns all the variables as table\n\n\n\n\n\n","category":"function"},{"location":"modelicaSystem/#OMJulia.getContinuous","page":"ModelicaSystem","title":"OMJulia.getContinuous","text":"standard getXXX() API function which returns the continuous variables parsed from xmlfile\n\n\n\n\n\n","category":"function"},{"location":"modelicaSystem/#OMJulia.getInputs","page":"ModelicaSystem","title":"OMJulia.getInputs","text":"standard getXXX() API function which returns the input variables parsed from xmlfile\n\n\n\n\n\n","category":"function"},{"location":"modelicaSystem/#OMJulia.getOutputs","page":"ModelicaSystem","title":"OMJulia.getOutputs","text":"standard getXXX() API function which returns the output variables parsed from xmlfile\n\n\n\n\n\n","category":"function"},{"location":"modelicaSystem/#OMJulia.getParameters","page":"ModelicaSystem","title":"OMJulia.getParameters","text":"standard getXXX() API function which returns the parameter variables parsed from xmlfile\n\n\n\n\n\n","category":"function"},{"location":"modelicaSystem/#OMJulia.getSimulationOptions","page":"ModelicaSystem","title":"OMJulia.getSimulationOptions","text":"standard getXXX() API function which returns the SimulationOption variables parsed from xmlfile\n\n\n\n\n\n","category":"function"},{"location":"modelicaSystem/#OMJulia.getSolutions","page":"ModelicaSystem","title":"OMJulia.getSolutions","text":"standard getXXX() API Function which reads the result file and return the simulation results to user which can be used for plotting or further anlaysis\n\n\n\n\n\n","category":"function"},{"location":"modelicaSystem/#Examples","page":"ModelicaSystem","title":"Examples","text":"","category":"section"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"getQuantities(mod)\ngetQuantities(mod, \"height\")\ngetQuantities(mod, [\"c\",\"radius\"])\nshowQuantities(mod)","category":"page"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"getContinuous(mod)\ngetContinuous(mod, [\"velocity\",\"height\"])","category":"page"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"getInputs(mod)\ngetOutputs(mod)","category":"page"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"getParameters(mod)\ngetParameters(mod, [\"c\",\"radius\"])","category":"page"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"getSimulationOptions(mod)\ngetSimulationOptions(mod, [\"stepSize\",\"tolerance\"])","category":"page"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"getSolutions(mod)\ngetSolutions(mod, [\"time\",\"height\"])","category":"page"},{"location":"modelicaSystem/#Set-Methods","page":"ModelicaSystem","title":"Set Methods","text":"","category":"section"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"setInputs()\nsetParameters()\nsetSimulationOptions()","category":"page"},{"location":"modelicaSystem/#Examples-2","page":"ModelicaSystem","title":"Examples","text":"","category":"section"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"setInputs(mod, \"cAi=1\")\nsetInputs(mod, [\"cAi=1\",\"Ti=2\"])","category":"page"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"setParameters(mod, \"radius=14\")\nsetParameters(mod, [\"radius=14\",\"c=0.5\"])","category":"page"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"setSimulationOptions(mod, [\"stopTime=2.0\",\"tolerance=1e-08\"])","category":"page"},{"location":"modelicaSystem/#Simulation","page":"ModelicaSystem","title":"Simulation","text":"","category":"section"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"simulate","category":"page"},{"location":"modelicaSystem/#OMJulia.simulate","page":"ModelicaSystem","title":"OMJulia.simulate","text":"simulate(omc; resultfile=nothing, simflags=nothing, verbose=true)\n\nSimulate modelica model.\n\nArguments\n\nomc:        OpenModelica compiler session, see OMCSession().\n\nKeyword Arguments\n\nresultFile: Result file to write simulation results into.\nsimflags:   Simulation flags, see Simulation Runtime Flags.\n\nExamples\n\nsimulate(omc)\n\nSpecify result file:\n\nsimulate(omc, resultfile=\"tmpresult.mat\")\n\nSet simulation runtime flags:\n\nsimulate(omc, simflags=\"-noEmitEvent -override=e=0.3,g=9.3\")\n\n\n\n\n\n","category":"function"},{"location":"modelicaSystem/#Examples-3","page":"ModelicaSystem","title":"Examples","text":"","category":"section"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"simulate(mod, simflags=\"-noEventEmit -noRestart -override=e=0.3,g=9.71\")","category":"page"},{"location":"modelicaSystem/#Linearization","page":"ModelicaSystem","title":"Linearization","text":"","category":"section"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"linearize()\ngetLinearizationOptions()\nsetLinearizationOptions()\ngetLinearInputs()\ngetLinearOutputs()\ngetLinearStates()","category":"page"},{"location":"modelicaSystem/#Examples-4","page":"ModelicaSystem","title":"Examples","text":"","category":"section"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"getLinearizationOptions(mod) \ngetLinearizationOptions(mod, [\"startTime\",\"stopTime\"])","category":"page"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"setLinearizationOptions(mod,[\"stopTime=2.0\",\"tolerance=1e-06\"])","category":"page"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"linearize(mod)","category":"page"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"getLinearInputs(mod)\ngetLinearOutputs(mod)\ngetLinearStates(mod)","category":"page"},{"location":"modelicaSystem/#Sensitivity-Analysis","page":"ModelicaSystem","title":"Sensitivity Analysis","text":"","category":"section"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"sensitivity","category":"page"},{"location":"modelicaSystem/#OMJulia.sensitivity","page":"ModelicaSystem","title":"OMJulia.sensitivity","text":"Method for computing numeric sensitivity of OpenModelica object\n\nArguments:\n\n1st arg: Vp  # Array of strings of Modelica Parameter names    2nd arg: Vv  # Array of strings of Modelica Variable names    3rd arg: Ve  # Array of float Excitations of parameters; defaults to scalar 1e-2\n\nReturns:\n\n1st return: VSname # Vector of Sensitivity names    2nd return: Sarray # Array of sensitivies: vector of elements per parameter,    each element containing time series per variable\n\n\n\n\n\n","category":"function"},{"location":"modelicaSystem/#Examples-5","page":"ModelicaSystem","title":"Examples","text":"","category":"section"},{"location":"modelicaSystem/","page":"ModelicaSystem","title":"ModelicaSystem","text":"(Sn, Sa) = sensitivity(mod, [\"UA\",\"EdR\"], [\"T\",\"cA\"], [1e-2,1e-4])","category":"page"}]
}
